
<launch>

  <arg name="save_intermediate_clouds" default="true" />
  <arg name="save_intermediate_images" default="false" />
  <arg name="log_to_db" default="true" />
  <arg name="log_objects_to_db" default="true" />
  <arg name="save_mask" default="true" />
  <arg name="cleanup" default="false" />
  <arg name="cache_old_data" default="false" />
  <arg name="max_instances" default="10" />
  <arg name="update_metaroom" default="true" />
  <arg name="newest_dynamic_clusters" default="true" />
  <arg name="segmentation_method" default="meta_room" />
  <!--<arg name="use_NDT_registration" default="true" /> -->

  <arg name="min_object_size" default="500" />
  <arg name="machine" default="localhost" />
  <arg name="user" default="" />
  <arg name="sweep_ip" default="localhost" />
  <arg name="sweep_user" default="" />
  <arg name="mapping_ip" default="localhost" />
  <arg name="mapping_user" default="" />

  <machine name="$(arg machine)" address="$(arg machine)" env-loader="$(optenv ROS_ENV_LOADER )" user="$(arg user)" default="true" />

    
    <!-- The system merging the individual frames into a local map -->
    <include file="$(find cloud_merge)/launch/cloud_merge.launch">
	<arg name="save_intermediate_clouds" value="$(arg save_intermediate_clouds)"/>
	<arg name="save_intermediate_images" value="$(arg save_intermediate_images)"/>
        <arg name="log_to_db" value="$(arg log_to_db)"/>
        <arg name="cleanup" value="$(arg cleanup)"/>
        <arg name="cache_old_data" value="$(arg cache_old_data)"/>
        <arg name="max_instances" value="$(arg max_instances)"/>
    	<arg name="machine" value="$(arg mapping_ip)"/>
	<arg name="user" value="$(arg mapping_user)" />  
    </include>

    <!-- The system doing the analysis of static vs dynamic parts of the local maps -->

    <node machine="$(arg machine)" pkg="calibrate_sweeps" type="calibrate_sweep_as" name="calibrate_sweep_as" output="screen" respawn="true"/>
    
    <node machine="$(arg machine)" pkg="semantic_map_publisher" type="semantic_map_publisher" name="semantic_map_publisher" output="screen" respawn="true"/>
    
    <!--
    <node machine="$(arg machine)" pkg="object_manager" type="object_manager_node" name="object_manager_node" output="screen" respawn="true">
        <param name="log_objects_to_db" value="$(arg log_objects_to_db)"/>
        <param name="min_object_size" value="$(arg min_object_size)"/>
        <param name="save_mask" value="$(arg save_mask)"/>
    </node>
    -->

        <node name="do_sweep" pkg="cloud_merge" type="do_sweep.py" output="screen" respawn="true">
        </node>

        <node name="dynamic_object_compute_mask_server" pkg="object_manager" type="dynamic_object_compute_mask_server" output="screen" respawn="true">
	        <param name="segmentation_method" value="$(arg segmentation_method)"/>
        </node>
	
    <!-- Action server for executing the PTU sweeps -->
    <include file="$(find scitos_ptu)/launch/ptu_action_server_metric_map.launch"> 

    	<arg name="machine" value="$(arg sweep_ip)"/>
	<arg name="user" value="$(arg sweep_user)" />  
    </include>

</launch>
